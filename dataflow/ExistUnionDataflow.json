{
	"name": "ExistUnionDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_EMP_DEPT_SOURCE",
						"type": "DatasetReference"
					},
					"name": "EmpData"
				},
				{
					"dataset": {
						"referenceName": "DS_DEPT_ONLY",
						"type": "DatasetReference"
					},
					"name": "DeptData"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "NoExistSink"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "ExistSink"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText2",
						"type": "DatasetReference"
					},
					"name": "UnionSink"
				}
			],
			"transformations": [
				{
					"name": "DeptExists"
				},
				{
					"name": "DeptNoExist"
				},
				{
					"name": "ExistNoExistUnion"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPNO as string,",
				"          ENAME as string,",
				"          JOB as string,",
				"          MGR as string,",
				"          HIREDATE as string,",
				"          SAL as string,",
				"          COMM as string,",
				"          DEPTNO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> EmpData",
				"source(output(",
				"          DEPTNO as string,",
				"          DNAME as string,",
				"          LOC as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> DeptData",
				"EmpData, DeptData exists(EmpData@DEPTNO == DeptData@DEPTNO,",
				"     negate:false,",
				"     broadcast: 'auto')~> DeptExists",
				"EmpData, DeptData exists(EmpData@DEPTNO == DeptData@DEPTNO,",
				"     negate:true,",
				"     broadcast: 'auto')~> DeptNoExist",
				"DeptExists, DeptNoExist union(byName: true,",
				"     partitionBy('hash', 1))~> ExistNoExistUnion",
				"DeptNoExist sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DEPTNO as string,",
				"          DNAME as string,",
				"          LOC as string",
				"     ),",
				"     partitionFileNames:['DeptNoExistsData.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> NoExistSink",
				"DeptExists sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DEPTNO as string,",
				"          DNAME as string,",
				"          LOC as string",
				"     ),",
				"     partitionFileNames:['DeptExistsData.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> ExistSink",
				"ExistNoExistUnion sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DEPTNO as string,",
				"          DNAME as string,",
				"          LOC as string",
				"     ),",
				"     partitionFileNames:['UnionSink.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> UnionSink"
			]
		}
	}
}