{
	"name": "Parse_Dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Parse_Source",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Parse_Output",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "parse1"
				},
				{
					"name": "parse2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          EMPNO as string,",
				"          ENAME as string,",
				"          JOB as string,",
				"          Skills as string,",
				"          Address as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 parse(ParseSkill1 = Skills ? (skill1 as string,",
				"          skill2 as string,",
				"          skill3 as string),",
				"     format: 'delimited',",
				"     columnNamesAsHeader: false,",
				"     columnDelimiter: '|',",
				"     nullValue: '') ~> parse1",
				"parse1 parse(ParseAddress = Address ? (City as string,",
				"          Country as string),",
				"     format: 'json',",
				"     documentForm: 'singleDocument') ~> parse2",
				"parse2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          EMPNO as string,",
				"          ENAME as string,",
				"          JOB as string,",
				"          Skills as string,",
				"          Address as string",
				"     ),",
				"     partitionFileNames:['ParseOutput.csv'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     mapColumn(",
				"          EMPNO,",
				"          ENAME,",
				"          JOB,",
				"          Skills = ParseSkill1.skill1,",
				"          skill2 = ParseSkill1.skill2,",
				"          Address",
				"     ),",
				"     partitionBy('hash', 1)) ~> sink1"
			]
		}
	}
}